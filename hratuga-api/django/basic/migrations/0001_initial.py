# Generated by Django 4.0.2 on 2022-02-12 16:11

from django.db import migrations, models
import django_quill.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('sorting', models.IntegerField(auto_created=True, null=True, unique=True)),
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('question', django_quill.fields.QuillField(blank=True, max_length=1000)),
                ('answer', django_quill.fields.QuillField(blank=True, max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=60)),
                ('tech_name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('age_group', models.IntegerField(blank=True, null=True)),
                ('is_searching', models.BooleanField(default=True)),
                ('weekday', models.CharField(max_length=10)),
                ('time_start', models.CharField(max_length=10)),
                ('time_end', models.CharField(max_length=10)),
                ('text', django_quill.fields.QuillField(blank=True, max_length=1000)),
                ('group_leader', models.CharField(blank=True, max_length=60)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=60)),
                ('content', django_quill.fields.QuillField(blank=True, max_length=1000)),
                ('valid_from', models.DateTimeField()),
                ('valid_till', models.DateTimeField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PackingListTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PackingListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('packing_list_tags', models.ManyToManyField(blank=True, to='basic.PackingListTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PackingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('packing_list_tags', models.ManyToManyField(blank=True, to='basic.PackingListTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=60)),
                ('organizer', models.CharField(max_length=30)),
                ('responsible_person', models.CharField(max_length=30)),
                ('description', django_quill.fields.QuillField(blank=True, max_length=1000)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('deadline_date', models.DateTimeField(blank=True, null=True)),
                ('start_place', models.CharField(max_length=30)),
                ('end_place', models.CharField(max_length=30)),
                ('costs', models.FloatField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=1)),
                ('in_heim', models.BooleanField(default=1)),
                ('groups', models.ManyToManyField(blank=True, to='basic.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
